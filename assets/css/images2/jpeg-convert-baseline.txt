#!/bin/zsh
#
# jpeg-convert-baseline
# Created by Frost on 2021-01-23
# https://codeberg.org/frost/jpeg-convert-baseline
#
# This is free and unencumbered software released into the public domain.
# See COPYING.md for more information.
#

IFS=$'\n'

### Handle command-line arguments ###
while true; do
	case "$1" in
		"--help")
			echo "Usage: jpeg-convert-baseline [--no-replace | --only-replace] [-t] foo.jpg bar.jpg ..."
			exit
			;;
		"--no-replace")
			# only make .baseline copies, don't replace original files
			noreplace=true
			shift
			;;
		"--only-replace")
			# only replace files with their .baseline counterparts, don't actually make .baseline
			onlyreplace=true
			shift
			;;
		"-t")
			preservetimestamps=true
			shift
			;;
		*)
			break
			;;
	esac
done

### Convert anything that needs it ###
if [[ -n $onlyreplace ]]; then
	echo "Skipping convert"
else
	echo -e "\n-- Convert --\n"
	for file in "$@"; do
		if [[ -e $file.baseline ]]; then
			echo "$file is already converted"
			continue
		fi
		interlacetype=$(identify -verbose $file | grep Interlace: | cut -d ':' -f 2 | tr -d ' ')
		if [[ $interlacetype == JPEG ]]; then
			echo "$file is interlaced, converting"
			convert $file -interlace none $file.baseline
		else
			echo $file
		fi
	done
fi

### Move .baseline files into place ###
if [[ -n $noreplace ]]; then
	echo "Skipping replace"
else
	echo -e "\n-- Replace --\n"
	for file in *.baseline; do
		echo "Replacing ${file%.baseline}"
		if [[ -n $preservetimestamps ]]; then
			echo "Copying timestamp from ${file%.baseline}"
			touch -r ${file%.baseline} $file
		fi
		mv $file ${file%.baseline}
	done
fi
